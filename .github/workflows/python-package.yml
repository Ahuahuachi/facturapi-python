# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: ["main", "develop"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pylint pytest 
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Analysing the code with pylint
        id: pylint
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "SUMMARY<<$EOF" >> "$GITHUB_OUTPUT"
          echo "#Pylint Report" >> "$GITHUB_OUTPUT"
          pylint $(git ls-files '*.py') --output pylint_summary --exit-zero
          cat pylint_summary >> "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"
          cat pylint_summary >> "$GITHUB_STEP_SUMMARY"

      - name: Test with pytest
        env:
          FACTURAPI_API_KEY: ${{ secrets.FACTURAPI_API_KEY }}
          PYTHONPATH: ./src
        run: |
          pytest

      - name: Generating lint summary comment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `${{steps.pylint.outputs.SUMMARY}}`
            })
